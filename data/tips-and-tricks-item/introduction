{
  name = "introduction",
  order = "a-[basic]-a[introduction]",
  simulation = {
    init = "    local scenes =\n    {\n      \"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\",\n    }\n\n    local validate = function(entities)\n      for k, v in pairs (entities) do\n        if not v.valid then entities[k] = nil end\n      end\n    end\n\n    global.stack = game.create_inventory(1)[1]\n    global.last_index = -1\n    local stamp_scene = function()\n      local index = math.random(#scenes)\n      if index == global.last_index then\n        for k, scene in pairs (scenes) do\n          if k ~= index then\n            index = k\n            break\n          end\n        end\n      end\n      global.last_index = index\n      local scene = scenes[index]\n      global.stack.import_stack(scene)\n      global.build_entities = global.stack.get_blueprint_entities()\n    end\n\n    local distance = function(p_1, p_2)\n      return (((p_1.x - p_2.x) ^ 2) + ((p_1.y - p_2.y) ^ 2)) ^ 0.5\n    end\n\n    local get_closest = function(entities, position)\n      local index, closest\n      local max_distance = math.huge\n      for k, entity in pairs (entities) do\n        local entity_distance = distance(position, entity.position)\n        if entity_distance < max_distance then\n          max_distance = entity_distance\n          index = k\n          closest = entity\n        end\n      end\n      return index, closest\n    end\n\n    script.on_nth_tick(2, function()\n      if global.destroy_entities then\n        validate(global.destroy_entities)\n        if not next(global.destroy_entities) then\n          global.destroy_entities = nil\n          stamp_scene()\n          return\n        end\n        local entity = game.surfaces[1].get_closest({-10, -10}, global.destroy_entities)\n        if entity then entity.destroy() end\n      end\n\n      if global.build_entities then\n        if not next(global.build_entities) then\n          global.build_entities = nil\n          return\n        end\n        local index, closest = get_closest(global.build_entities, {x = -10, y = -10})\n        game.surfaces[1].create_entity(closest)\n        global.build_entities[index] = nil\n      end\n\n    end)\n\n    script.on_nth_tick(1500, function()\n      global.destroy_entities = game.surfaces[1].find_entities()\n    end)\n  "
  },
  starting_status = "unlocked",
  trigger = {
    ticks = 18000,
    type = "time-elapsed"
  },
  type = "tips-and-tricks-item"
}