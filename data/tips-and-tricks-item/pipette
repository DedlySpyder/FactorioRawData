{
  category = "game-interaction",
  dependencies = {
    "introduction"
  },
  name = "pipette",
  order = "e",
  simulation = {
    init = "    player = game.create_test_player{name = \"big K\"}\n    player.character.teleport{0, 3}\n    game.camera_player = player\n    game.camera_player_cursor_position = player.position\n    pipette_delay = 40\n    clear_delay = 60\n\n    game.surfaces[1].create_entities_from_blueprint_string\n    {\n      string = \"0eNqV1F1uhCAQAOC7zDNuFvxBvcqmadSdNiQ6GsCmxnj3ojbNZqstPBHA+RgnMDPU7YiDVmShnEE1PRkobzMY9U5Vu67ZaUAoQVnsgAFV3TqzuiIz9NpGNbYWFgaK7vgJJV/Yv8HG9oTR26ipavAhViwvDJCssgr3LLbJ9EpjV6N2+AnBYOiNi+ppPdNJUcxgcgNf1nSeFOGt8D+U+KwWv5nikm4Qv6TuZ+9KY7NviwM38XfzEDf1d2WIm/m7WYgr/d00xM393STELX7c2t0n1JEig9q6rYPb+Q1fn+HkAOZX/4xFSMac+8NxECwCasGDahHw6vh5yq7NbB2pfOh+DD5Qm/2DnCeyEJJnUhbSvf4v/R2wkg==\",\n      position = {-5,0},\n    }\n\n    step_1 = function()\n      target_position = {-1, -1}\n      script.on_nth_tick(1, function()\n        if game.move_cursor({position = target_position}) then\n          step_2()\n        end\n      end)\n    end\n\n    step_2 = function()\n      local count = pipette_delay\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count == math.floor(pipette_delay / 2) then\n          player.pipette_entity(player.selected)\n        end\n\n        if count <= 0 then\n          step_3()\n        end\n      end)\n    end\n\n    step_3 = function()\n      target_position = {3, -1}\n      script.on_nth_tick(1, function()\n        finished = game.move_cursor({position = target_position})\n        player.build_from_cursor{position = game.camera_player_cursor_position}\n        if finished then\n          step_4()\n        end\n      end)\n    end\n\n    step_4 = function()\n      local count = clear_delay\n      target_position = {-1.5, 0.5}\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count == math.floor(clear_delay / 2) then\n          player.clear_cursor()\n        end\n        if count > math.floor(clear_delay / 3) then return end\n\n        finished = game.move_cursor({position = target_position})\n        if finished then\n          step_5()\n        end\n      end)\n\n    end\n\n    step_5 = function()\n      local count = pipette_delay\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count == math.floor(pipette_delay / 2) then\n          player.pipette_entity(player.selected)\n          game.camera_player_cursor_direction = player.selected.direction\n        end\n\n        if count <= 0 then\n          step_6()\n        end\n      end)\n    end\n\n    step_6 = function()\n      target_position = {0.5, 0.5}\n      script.on_nth_tick(1, function()\n        finished = game.move_cursor({position = target_position})\n        if finished then\n          player.build_from_cursor{position = game.camera_player_cursor_position, direction = 4}\n          step_7()\n        end\n      end)\n    end\n\n    step_7 = function()\n      target_position = {2.5, 0.5}\n      script.on_nth_tick(1, function()\n\n        finished = game.move_cursor({position = target_position})\n        if finished then\n          player.build_from_cursor{position = game.camera_player_cursor_position, direction = 4}\n          step_8()\n        end\n      end)\n    end\n\n    step_8 = function()\n      local count = clear_delay\n      target_position = {-1.5, 1.5}\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count == math.floor(clear_delay / 2) then\n          player.clear_cursor()\n        end\n\n        if count > math.floor(clear_delay / 3) then return end\n\n        finished = game.move_cursor({position = target_position})\n        if finished then\n          step_9()\n        end\n      end)\n\n    end\n\n    step_9 = function()\n      local count = pipette_delay\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count == math.floor(pipette_delay / 2) then\n          player.pipette_entity(player.selected)\n          game.camera_player_cursor_direction = player.selected.direction\n        end\n\n        if count <= 0 then\n          step_10()\n        end\n      end)\n    end\n\n    step_10 = function()\n      target_position = {2.5, 1.5}\n      script.on_nth_tick(1, function()\n        finished = game.move_cursor({position = target_position})\n        player.build_from_cursor{position = game.camera_player_cursor_position, direction = 2}\n        if finished then\n          step_11()\n        end\n      end)\n    end\n\n    step_11 = function()\n      local count = clear_delay\n      target_position = player.position\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count == math.floor(clear_delay / 2) then\n          player.clear_cursor()\n        end\n\n        if count > math.floor(clear_delay / 3) then return end\n\n        finished = game.move_cursor({position = target_position})\n        if finished then\n          reset()\n        end\n      end)\n\n    end\n\n    reset = function()\n      local count = 60\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count >= 0 then return end\n\n        for k, v in pairs (game.surfaces[1].find_entities_filtered{area = {{0, -2}, {3,  2}}}) do\n          v.destroy()\n        end\n\n        local belt = game.surfaces[1].find_entity(\"transport-belt\", {-0.5, 1.5})\n        belt.destroy()\n\n        start()\n\n      end)\n    end\n\n    start = function()\n      local count = 60\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count >= 0 then return end\n\n        player.character.clear_items_inside()\n        player.insert(\"transport-belt\")\n        player.insert(\"stone-furnace\")\n        player.insert(\"burner-inserter\")\n\n        step_1()\n\n      end)\n    end\n\n    start()\n\n  "
  },
  skip_trigger = {
    count = 5,
    type = "use-pipette"
  },
  trigger = {
    count = 120,
    type = "build-entity"
  },
  type = "tips-and-tricks-item"
}