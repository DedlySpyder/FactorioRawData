{
  category = "game-interaction",
  dependencies = {
    "introduction"
  },
  name = "show-info",
  order = "b",
  simulation = {
    init = "    local width = 0\n\n    function box_width(box)\n      return box.right_bottom.x - box.left_top.x\n    end\n\n    function box_height(box)\n      return box.right_bottom.y - box.left_top.y\n    end\n\n    local entity_prototypes = game.entity_prototypes\n\n    local assembler_box = entity_prototypes[\"assembling-machine-1\"].selection_box\n    local mining_drill_box = entity_prototypes[\"burner-mining-drill\"].selection_box\n    local wooden_chest_box = entity_prototypes[\"wooden-chest\"].selection_box\n    local lab_box = entity_prototypes[\"lab\"].selection_box\n    local first_row_width = box_width(assembler_box) + 1 + box_width(mining_drill_box) + 1 + box_width(wooden_chest_box) + 1 + box_width(lab_box)\n    local first_row_height = math.max(box_height(assembler_box), box_height(mining_drill_box), box_height(wooden_chest_box), box_height(lab_box))\n\n    local steam_engine_box = entity_prototypes[\"steam-engine\"].selection_box\n    local boiler_box = entity_prototypes[\"boiler\"].selection_box\n    local second_row_width = box_height(steam_engine_box) + 1 + box_width(boiler_box) + 1 + 2 -- two 2 is for the pipes formation\n    local second_row_height = math.max(box_width(steam_engine_box), box_height(boiler_box), 2) -- two 2 is for the pipes formation\n\n    local height = first_row_height + 1 + second_row_height\n    local y = (-height) / 2 + first_row_height / 2\n    local x = (-first_row_width) / 2\n\n    local assembler = game.surfaces[1].create_entity{name = \"assembling-machine-1\", position = {x - assembler_box.left_top.x, y}, force = \"player\"}\n    assembler.set_recipe(\"iron-gear-wheel\")\n    x = x + box_width(assembler_box) + 1\n\n    game.surfaces[1].create_entity{name = \"burner-mining-drill\", position = {x - mining_drill_box.left_top.x, y}, direction = defines.direction.east, force = \"player\"}\n    x = x + box_width(mining_drill_box) + 1\n\n    local chest = game.surfaces[1].create_entity{name = \"wooden-chest\", position = {x - wooden_chest_box.left_top.x, y}, force = \"player\"}\n    chest.get_output_inventory().insert{name = \"iron-plate\", count = 1}\n    chest.get_output_inventory().insert{name = \"iron-gear-wheel\", count = 1}\n    chest.get_output_inventory().insert{name = \"electronic-circuit\", count = 1}\n    x = x + box_width(wooden_chest_box) + 1\n\n    local lab = game.surfaces[1].create_entity{name = \"lab\", position = {x - lab_box.left_top.x, y}, force = \"player\"}\n    lab.get_output_inventory().insert{name = \"automation-science-pack\", count=1}\n\n    y = y + (first_row_height + second_row_height) / 2 + 1\n    x = (-second_row_width) / 2\n\n    game.surfaces[1].create_entity{name = \"steam-engine\", position = {x - steam_engine_box.left_top.y, y}, force = \"player\", direction = defines.direction.east}\n    x = x + box_height(steam_engine_box) + 1 --box height as it is rotated\n\n    game.surfaces[1].create_entity{name = \"boiler\", position = {x - boiler_box.left_top.x, y}, force = \"player\"}\n    x = x + box_width(boiler_box) + 1\n\n    local pipe = game.surfaces[1].create_entity{name = \"pipe\", position = {x + 0.5, y}, force = \"player\"}\n    pipe.insert_fluid{name = \"water\", amount = 100}\n    game.surfaces[1].create_entity{name = \"pipe-to-ground\", position = {x + 0.5, y - 1}, force = \"player\", direction = defines.direction.south}\n    game.surfaces[1].create_entity{name = \"pipe-to-ground\", position = {x + 1.5, y}, force = \"player\", direction = defines.direction.west}\n  ",
    update = "    game.camera_alt_info = (game.tick % 120) < 60\n  "
  },
  type = "tips-and-tricks-item"
}