{
  category = "game-interaction",
  dependencies = {
    "entity-transfers"
  },
  name = "z-dropping",
  order = "h",
  simulation = {
    init = "\n    player = game.create_test_player{name = \"big k\"}\n    player.teleport({0, 1.5})\n    game.camera_player = player\n    game.camera_player_cursor_position = player.position\n    game.camera_alt_info = true\n\n    game.surfaces[1].create_entities_from_blueprint_string\n    {\n      string = \"0eNqV1O9ugyAQAPB34TM2Bf9VX2VZjNVrR6KHAezWNL77oKZdV7XFb8LBj1O5u5B900OnBBqSX4ioJGqSf1yIFkcsGzdnzh2QnAgDLaEEy9aNtJEIwaFXWFZABkoE1vBDcjbQt3uNKlF3UplgD4152MyHT0oAjTACxiyug3OBfbsHZfWn87/LprFuJ7XdItGdaJmAhZuYkrN9yjbx4DJ6criX85YJl15pQvGbxKxESS0UVGOYz7iRtxuucmNvN1rlJt5uvMpNvd1klbvzdtNVbnZ3G1nWdmbiZUsavZcKdr2riend3951gQeBNhZUX6Bnsmbb/2nf1hcajBF41G6dglaeoOhtrDGgoC5cldqQUT3M3XbGFqp/etuvh/NZhPsi0Qsk9EWSF8hflQklcelbBrcS4/M9gMUre5L7ObNQsq4pjY5tmNfmmj/0cUpOoPR4r3YsSjOesiRNszQahl8Gf/Lk\",\n      position = {0,0},\n    }\n\n    reset_items = function()\n\n    end\n\n    fake_drop_to = function(entity)\n      local stack = player.cursor_stack\n      if not (stack.valid and stack.valid_for_read) then return end\n      local name, count = stack.name, 1\n      local inserted = entity.insert{name = name, count = count}\n      if inserted == 0 then return end\n\n      player.remove_item{name = name, count = inserted}\n      player.surface.create_entity\n      {\n        name = \"flying-text\",\n        position = {entity.position.x, entity.position.y - 0.5},\n        text =\n        {\n          \"\",\n          \"-\",\n          inserted,\n          \" \",\n          game.item_prototypes[name].localised_name,\n          \" (\",\n          player.get_item_count(name),\n          \")\"\n        }\n      }\n      player.play_sound{path = \"utility/inventory_move\"}\n    end\n\n    fake_drop_at_cursor = function()\n      local stack = player.cursor_stack\n      if not (stack and stack.valid_for_read) then return end\n\n      local drop_stack = {name = stack.name, count = 1}\n      game.surfaces[1].spill_item_stack(game.camera_player_cursor_position, drop_stack)\n      player.remove_item(drop_stack)\n      player.play_sound{path = \"utility/drop_item\"}\n\n    end\n\n    step_1 = function()\n      player.cursor_stack.set_stack({name = \"iron-ore\", count = 50})\n      script.on_nth_tick(1, function()\n        if game.move_cursor({position = {-3.5, -2.5}}) then\n          step_2()\n        end\n      end)\n    end\n\n    step_2 = function()\n      local repeat_time = 10\n      local count = repeat_time\n      local repeat_count = 15\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        count = repeat_time\n        repeat_count = repeat_count - 1\n        if repeat_count < 0 then\n          step_3()\n          return\n        end\n        fake_drop_at_cursor()\n      end)\n    end\n\n    step_3 = function()\n      script.on_nth_tick(1, function()\n        local finished = game.move_cursor({position = {-3.5, 2.5}})\n        if finished then\n          step_4()\n        end\n      end)\n    end\n\n    step_4 = function()\n      local repeat_time = 10\n      local count = repeat_time\n      local repeat_count = 10\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        count = repeat_time\n        repeat_count = repeat_count - 1\n        if repeat_count < 0 then\n          step_6()\n          return\n        end\n        fake_drop_to(player.selected)\n      end)\n    end\n\n    step_6 = function()\n      script.on_nth_tick(1, function()\n        local finished = game.move_cursor({position = {2.5, -1.5}})\n        if finished then\n          step_7()\n        end\n      end)\n    end\n\n    step_7 = function()\n      local repeat_time = 10\n      local count = repeat_time\n      local repeat_count = 10\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        count = repeat_time\n        repeat_count = repeat_count - 1\n        if repeat_count < 0 then\n          step_8()\n          return\n        end\n        fake_drop_at_cursor()\n      end)\n    end\n\n    step_8 = function()\n      script.on_nth_tick(1, function()\n        local finished = game.move_cursor({position = {2.0, 2.0}})\n        if finished then\n          step_9()\n        end\n      end)\n    end\n\n    step_9 = function()\n      local last_selected\n      script.on_nth_tick(1, function()\n        local finished = game.move_cursor({position = {6.0, 2.0}})\n        if player.selected and player.selected ~= last_selected then\n          last_selected = player.selected\n          player.selected.insert(\"coal\")\n          fake_drop_to(player.selected)\n        end\n        if finished then\n          step_10()\n        end\n      end)\n    end\n\n    step_10 = function()\n      script.on_nth_tick(1, function()\n        local finished = game.move_cursor({position = player.position})\n        if finished then\n          reset()\n        end\n      end)\n    end\n\n    reset = function()\n      local count = 30\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        player.clear_cursor()\n        for k, v in pairs (game.surfaces[1].find_entities()) do\n          if v.type == \"item-entity\" then\n            v.destroy()\n          else\n            v.clear_items_inside()\n          end\n        end\n        start()\n      end)\n    end\n\n    start = function()\n      local count = 30\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        step_1()\n      end)\n    end\n\n    start()\n\n  "
  },
  trigger = {
    triggers = {
      {
        type = "dependencies-met"
      },
      {
        ticks = 108000,
        type = "time-elapsed"
      }
    },
    type = "sequence"
  },
  type = "tips-and-tricks-item"
}