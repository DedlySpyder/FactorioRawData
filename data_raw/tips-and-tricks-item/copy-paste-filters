{
  category = "copy-paste",
  dependencies = {
    "copy-entity-settings"
  },
  indent = 1,
  name = "copy-paste-filters",
  order = "c",
  simulation = {
    init = "      game.surfaces[1].create_entities_from_blueprint_string\n      {\n        string = \"0eNrVWdtuozAU/Bc/Q4Uv3PIrqygi4KSWiImM6W4U5d/XhCbNNrCcY9qHvoWA58wczxjLnMm27uTRKG3J6kxU2eiWrH6dSav2uqj7/+zpKMmKKCsPJCC6OPRX1hS6PTbGhltZW3IJiNKV/ENW9BLMDq6bopLmYRC7rAMitVVWyaH89eK00d1h655c0ftYpXdKu1th+Spb6zCPTeuGNbqv5qDC9CUOyMn9SF7ia4Xh+U0rrVV63/bPGXlo3uSmc/dqK42sNj1Bd2tX1K0MyPD3wORW1zQ63MvChL9fpaxd4bLp+qbRKArIoan6hwob1rK40rq3Y33pO/JJD/vci2cdyaOKShlZDnfd0PemNp09dn3vn+D51Dw9lxH/tuuhkBgBFvO8+QRcAuAdw6eZfs80y9rxdVOtyrBUpuyU/Zhp5jPTCVhS9BOMm84agC3wbQb2LUfZNp9lHS9wLY3Ac5z8ENdS6rGCCMhUUOaBHIOQOd49MMoCDwxjHHv0goGQEw9kDkJO8c2AUfYIP4xxDu/FPZ8RBJlFHl1+Qk7GkBH5i3HIH/lrj7WydvQlLgZE+tSF2/IztegMq+TGbSgb48r2K67cja6aDLFJ4ZMS2RgyPK+9NTHIiMBSnJXggUUCw/PKcEbyyCsMOAc4dNKgY7theExjlB04PKUCBwx/SeJWLM7xayGsxwIPDGPsETkY4wQPDGOcoqMMI5yhcWF8c7TZQHxFhMYF8RUfqevcJtbsjdvoVnNm4yOvstvhhJ7Y2AuGNzVoryM4RgJdIkHgXQ6TECMkLFKAfzPCBKQIAYtclKFzABOQAw6R3gEzNOs48klZMt2f/5z60Hkh1F8I88manxA+K2SBDuEROD8Z8ayMBb5KPGLnJyOFnybeCuUexzLWdHLsDCXO8KeZX1o/B9f/jvIJ/lTMv/w6GD4xrB4+ZwTkTZp22GNnVKQ5S2mSpnnKL5e/ZEFBiA==\",\n        position = {-1, 1}\n      }\n\n    player = game.create_test_player{name = \"big k\"}\n    player.teleport({0, 1.5})\n    game.camera_player = player\n    game.camera_player_cursor_position = player.position\n    game.camera_alt_info = true\n\n    update_player_selected = function()\n      player.update_selected_entity(game.camera_player_cursor_position)\n      local selected = player.selected\n      if not selected then\n        if fake_source_box then\n          fake_source_box.destroy()\n          fake_source_box = nil\n        end\n        return\n      end\n\n      if copy_source and copy_source ~= selected then\n        if fake_source_box then\n          fake_source_box.destroy()\n        end\n        fake_source_box = game.surfaces[1].create_entity{name = \"highlight-box\", box_type = \"copy\", source = copy_source, position = copy_source.position}\n      end\n    end\n\n    step_1 = function()\n      script.on_nth_tick(1, function()\n        local finished = game.move_cursor({position = {-4, -1.5}})\n        update_player_selected()\n        if finished then\n          step_2()\n        end\n      end)\n    end\n\n    step_2 = function()\n      local wait = 30\n      copy_source = player.selected\n      game.surfaces[1].play_sound{path = \"utility/entity_settings_copied\"}\n      script.on_nth_tick(1, function()\n        wait = wait - 1\n        if wait >= 0 then return end\n        local finished = game.move_cursor{position = {4, -1.5}}\n        local last = last_selected\n        update_player_selected()\n\n        if finished then\n          local selected = player.selected\n          selected.copy_settings(copy_source, player)\n          step_3()\n        end\n      end)\n    end\n\n    step_3 = function()\n      local wait = 30\n      script.on_nth_tick(1, function()\n        wait = wait - 1\n        if wait > 0 then return end\n        local finished = game.move_cursor({position = player.position})\n        update_player_selected()\n        if fake_source_box and not player.selected then\n          fake_source_box.destroy()\n          fake_source_box = nil\n        end\n        if finished then\n          reset()\n        end\n      end)\n    end\n\n    reset = function()\n      local time = 150\n      script.on_nth_tick(1, function()\n        time = time - 1\n        if time > 0 then return end\n        copy_source = nil\n        local splitter = game.surfaces[1].find_entity(\"splitter\", {4, -1.5})\n        splitter.splitter_filter = nil\n        splitter.splitter_output_priority = \"none\"\n        start()\n      end)\n    end\n\n    start = function(time)\n\n      local time = time or 150\n      script.on_nth_tick(1, function()\n        time = time - 1\n        if time > 0 then return end\n        step_1()\n      end)\n    end\n\n    start(800)\n\n  ",
    init_update_count = 750
  },
  tag = "[entity=filter-inserter]",
  trigger = {
    consecutive = true,
    count = 3,
    type = "set-filter"
  },
  type = "tips-and-tricks-item"
}