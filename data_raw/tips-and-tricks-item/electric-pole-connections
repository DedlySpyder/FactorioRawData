{
  category = "electric-network",
  dependencies = {
    "electric-network"
  },
  indent = 1,
  name = "electric-pole-connections",
  order = "c",
  simulation = {
    init = "    player = game.create_test_player{name = \"big K\"}\n    player.character.teleport{-2, 2.5}\n    game.camera_player = player\n    game.camera_player_cursor_position = player.position\n\n    game.surfaces[1].create_entity{name = \"small-electric-pole\", position = {-6.5, 0.5}, force = \"player\"}\n    local right_pole = game.surfaces[1].create_entity{name = \"small-electric-pole\", position = {7.5, 0.5}, force = \"player\"}\n\n    step_1 = function()\n      player.cursor_stack.set_stack({name = \"small-electric-pole\", count = 50})\n      script.on_nth_tick(1, function()\n        if game.move_cursor({position = {0.5, 0.5}, speed = 0.1}) then\n          step_2()\n        end\n      end)\n    end\n\n    step_2 = function()\n      local count = 30\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        player.build_from_cursor{position = game.camera_player_cursor_position}\n        player.clear_cursor()\n        step_3()\n      end)\n    end\n\n    step_3 = function()\n      local count = 30\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        if game.move_cursor({position = player.position}) then\n          step_4()\n        end\n      end)\n    end\n\n    step_4 = function()\n      local count = 30\n      player.cursor_stack.set_stack{name = \"copper-cable\", count = 100}\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        if game.move_cursor({position = {0.5, 0.5}}) then\n          player.drag_wire{position = {0.5, 0.5}}\n          step_5()\n        end\n      end)\n    end\n\n    step_5 = function()\n      script.on_nth_tick(1, function()\n        if game.move_cursor({position = right_pole.position, speed = 0.15}) then\n          player.drag_wire{position = right_pole.position}\n          step_6()\n        end\n      end)\n    end\n\n    step_6 = function()\n      local count = 30\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        if game.move_cursor({position = {4, 1}}) then\n          step_7()\n        end\n      end)\n    end\n\n    step_7 = function()\n      local count = 30\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        if game.move_cursor({position = {0.5, 0.5}}) then\n          player.drag_wire{position = {0.5, 0.5}}\n          step_8()\n        end\n      end)\n    end\n\n    step_8 = function()\n      script.on_nth_tick(1, function()\n        if game.move_cursor({position = right_pole.position, speed = 0.15}) then\n          player.drag_wire{position = right_pole.position}\n          step_9()\n        end\n      end)\n    end\n\n    step_9 = function()\n      local count = 30\n      player.clear_cursor()\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        if game.move_cursor({position = player.position}) then\n          reset()\n        end\n      end)\n    end\n\n    reset = function()\n\n      local count = 30\n      player.clear_cursor()\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        player.clear_cursor()\n        local pole = game.surfaces[1].find_entity(\"small-electric-pole\", {0.5, 0.5})\n        pole.destroy()\n        start()\n      end)\n    end\n\n    start = function()\n      local count = 30\n      script.on_nth_tick(1, function()\n        count = count - 1\n        if count > 0 then return end\n        step_1()\n      end)\n    end\n\n    start()\n  "
  },
  skip_trigger = {
    count = 5,
    type = "manual-wire-drag"
  },
  tag = "[item=copper-cable]",
  trigger = {
    triggers = {
      {
        ticks = 864000,
        type = "time-elapsed"
      },
      {
        count = 15,
        entity = "small-electric-pole",
        match_type_only = true,
        type = "build-entity"
      }
    },
    type = "sequence"
  },
  type = "tips-and-tricks-item"
}