{
  category = "drag-building",
  dependencies = {
    "drag-building"
  },
  indent = 1,
  name = "drag-building-underground-belts",
  order = "d",
  simulation = {
    init = "\n    player = game.create_test_player{name = \"kovarex\"}\n    game.camera_player = player\n    game.camera_player_cursor_direction = defines.direction.east\n    cursor_position = {0, 0}\n\n    update_camera = function(event)\n\n      local position = player.position\n      game.camera_position = {position.x, position.y - 1.5}\n      game.camera_player_cursor_position = cursor_position\n\n      if event.tick % 60 == 0 then\n        player.surface.build_checkerboard\n        {\n          {position.x + 10, position.y - 10},\n          {position.x + 25, position.y + 10}\n        }\n      end\n    end\n    script.on_event(defines.events.on_tick, update_camera)\n\n    move_cursor = function(speed)\n      if not target_cursor_position then return true end\n\n      local speed = speed or 0.1\n\n      local dx = target_cursor_position[1] - cursor_position[1]\n      dx = math.max(-speed, math.min(speed, dx))\n      local dy = target_cursor_position[2] - cursor_position[2]\n      dy = math.max(-speed, math.min(speed, dy))\n\n      cursor_position[1] = cursor_position[1] + dx\n      cursor_position[2] = cursor_position[2] + dy\n\n      if cursor_position[1] == target_cursor_position[1] and cursor_position[2] == target_cursor_position[2] then\n        target_cursor_position = nil\n        return true\n      end\n\n    end\n\n    build_offset = {3, -3.5}\n\n    prepare = function()\n      player.cursor_stack.set_stack{name = \"underground-belt\", count = 50}\n      target_cursor_position = {player.position.x + build_offset[1], player.position.y + build_offset[2]}\n      script.on_nth_tick(1, function()\n        if move_cursor(0.2) then\n          build_belts()\n        end\n      end)\n    end\n\n    build_belts = function()\n      player.character.walking_state = {walking = true, direction = defines.direction.east}\n      last_distance = 1\n      last_x = 0\n      direction = defines.direction.east\n      script.on_nth_tick(1, function()\n        cursor_position = {player.position.x + build_offset[1], player.position.y + build_offset[2]}\n\n        if (cursor_position[1] - last_x) > last_distance then\n          if player.can_build_from_cursor{position = cursor_position, direction = direction} then\n            player.build_from_cursor{position = cursor_position, direction = direction}\n          end\n          if last_distance == 1 then\n            direction = defines.direction.west\n            game.camera_player_cursor_direction = defines.direction.east\n            last_distance = 5\n          else\n            direction = defines.direction.east\n            game.camera_player_cursor_direction = defines.direction.west\n            last_distance = 1\n          end\n          last_x = math.floor(cursor_position[1])\n        end\n\n        if player.cursor_stack.count == 0 then\n          finish()\n        end\n\n      end)\n    end\n\n    finish = function()\n      player.character.walking_state = {walking = false}\n      player.character.direction = defines.direction.south\n      script.on_nth_tick(1, nil)\n    end\n\n    prepare()\n  "
  },
  skip_trigger = {
    build_by_dragging = true,
    count = 3,
    entity = "underground-belt",
    match_type_only = true,
    type = "build-entity"
  },
  tag = "[entity=underground-belt]",
  trigger = {
    count = 30,
    entity = "underground-belt",
    match_type_only = true,
    type = "build-entity"
  },
  type = "tips-and-tricks-item"
}