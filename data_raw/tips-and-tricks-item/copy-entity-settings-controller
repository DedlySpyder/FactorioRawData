{
  category = "copy-paste",
  dependencies = {
    "introduction"
  },
  is_title = true,
  name = "copy-entity-settings-controller",
  order = "a",
  player_input_method_filter = "game_controller",
  simulation = {
    init = "      local surface = game.surfaces[1]\n      surface.create_entities_from_blueprint_string\n      {\n        string = \"0eNqVkd0OgjAMhd+l15sRRKd7FWPMwAabsEK2+UMI7+6AG4xGw11P037npO0gr27YOOIAugMqavagjx14KtlUQy+0DYIGCmhBABs7KOM92rwiLqU1xZUYZQq9AOILPkEn/UkAcqBAOPFG0Z75ZnN0ceA3SUBT+7hc85AgAmW22gpoY7FebaOPw4KmWK5mWaJx8nFFrGKGD690qVcy9/oC3CwE/uNlC3lvtxguPf5Gz14p4I7OjxvpPsnUIVXJTqmDWvf9C5Gbou0=\",\n        position = {0, -1}\n      }\n      surface.create_entity{name = \"substation\", position = {0, -10}}\n      surface.create_entity{name = \"electric-energy-interface\", position = {0, -10}}\n\n\n    player = game.create_test_player{name = \"big k\"}\n    player.teleport({-4.5, 2.5})\n    game.camera_player = player\n    game.camera_alt_info = true\n\n    update_player_selected = function(position)\n      player.update_selected_entity(position)\n      local selected = player.selected\n      if not selected then\n        if fake_source_box then\n          fake_source_box.destroy()\n          fake_source_box = nil\n        end\n        return\n      end\n\n      if copy_source and copy_source ~= selected then\n        if fake_source_box then\n          fake_source_box.destroy()\n        end\n        fake_source_box = game.surfaces[1].create_entity{name = \"highlight-box\", box_type = \"copy\", source = copy_source, position = copy_source.position}\n      end\n\n    end\n\n    step_1 = function()\n      script.on_nth_tick(1, function()\n        update_player_selected({-4.5, -0.5})\n        step_2()\n      end)\n    end\n\n    step_2 = function()\n      local wait = 30\n      copy_source = player.selected\n      game.surfaces[1].play_sound{path = \"utility/entity_settings_copied\"}\n      last_selected = player.selected\n      script.on_nth_tick(1, function()\n        wait = wait - 1\n        if wait >= 0 then return end\n        player.walking_state = {walking = true, direction = defines.direction.east}\n        update_player_selected({player.position.x, -0.5})\n        local selected = player.selected\n\n        if selected ~= last_selected then\n          last_selected = selected\n          selected.copy_settings(copy_source, player)\n        end\n\n        if player.position.x >= 4.5 then\n          player.walking_state = {walking = false}\n          step_3()\n        end\n      end)\n    end\n\n    step_3 = function()\n      local wait = 30      \n      script.on_nth_tick(1, function()\n        wait = wait - 1\n        if wait > 0 then return end\n        player.walking_state = {walking = true, direction = defines.direction.west}\n        update_player_selected({player.position.x, player.position.y})\n        if player.position.x <= -4.5 then\n          player.walking_state = {walking = false}\n          reset()\n        end\n      end)\n    end\n\n    reset = function()\n      local reset_tick = game.tick + 60\n      script.on_nth_tick(1, function()\n        if game.tick >= reset_tick then\n          for k, v in pairs (game.surfaces[1].find_entities_filtered{name = \"assembling-machine-2\"}) do\n            if v ~= copy_source then\n              v.set_recipe(nil)\n            end\n          end\n          copy_source = nil\n          start()\n        end\n      end)\n    end\n\n    start = function()\n      local start_tick = game.tick + 60\n      script.on_nth_tick(1, function()\n        if game.tick >= start_tick then\n          step_1()\n        end\n      end)\n    end\n\n    start()\n\n  "
  },
  skip_trigger = {
    count = 2,
    type = "paste-entity-settings"
  },
  trigger = {
    consecutive = true,
    count = 3,
    type = "set-recipe"
  },
  type = "tips-and-tricks-item"
}