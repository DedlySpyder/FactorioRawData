{
  category = "drag-building",
  dependencies = {
    "introduction"
  },
  is_title = true,
  name = "drag-building",
  order = "a",
  simulation = {
    init = "    global.player = game.create_test_player{name = \"kovarex\"}\n    global.character = global.player.character\n    global.character.teleport{0, 0.5}\n    game.camera_player = global.player\n    game.camera_player_cursor_position = {0, 0}\n\n    update_camera = function()\n      game.camera_position = {global.player.position.x, global.player.position.y - 2}\n    end\n\n    step_0 = function()\n      target_cursor_position = {global.character.position.x - 2.5, global.character.position.y - 4}\n      update_camera()\n      script.on_nth_tick(1, function()\n        local finished = game.move_cursor{position = target_cursor_position}\n        if finished then\n          step_1()\n        end\n      end)\n    end\n\n    step_1 = function()\n      global.character.cursor_stack.set_stack{name = \"stone-furnace\", count = 12}\n      target_cursor_position = {global.character.position.x + 2.5, global.character.position.y - 4}\n      script.on_nth_tick(1, function()\n\n        local finished = game.move_cursor({position = target_cursor_position})\n\n        if global.player.can_build_from_cursor{position = game.camera_player_cursor_position} then\n          global.player.build_from_cursor{position = game.camera_player_cursor_position}\n        end\n\n        if finished then\n          step_2()\n        end\n      end)\n    end\n\n    step_2 = function()\n      global.character.walking_state = {walking = true, direction = defines.direction.east}\n      local offset = {2.5, -4}\n      script.on_nth_tick(1, function()\n\n        game.camera_player_cursor_position = {global.character.position.x + offset[1], global.character.position.y + offset[2]}\n\n        if global.player.can_build_from_cursor{position = game.camera_player_cursor_position} then\n          global.player.build_from_cursor{position = game.camera_player_cursor_position}\n        end\n\n        if game.tick % 60 == 0 then\n          game.surfaces[1].build_checkerboard({{global.character.position.x + 10, global.character.position.y - 10},\n          {global.character.position.x + 25, global.character.position.y + 10}})\n        end\n\n        update_camera()\n\n        if global.player.cursor_stack.count == 0 then\n          step_3()\n        end\n\n      end)\n    end\n\n    step_3 = function()\n      global.character.walking_state = {walking = false}\n      local player_position = global.player.position\n      target_cursor_position = {player_position.x + 3.5, player_position.y - 1}\n      game.camera_player_cursor_direction = defines.direction.west\n      script.on_nth_tick(1, function()\n\n        update_camera()\n\n        if game.move_cursor({position = target_cursor_position}) then\n          step_4()\n        end\n\n      end)\n    end\n\n    step_4 = function()\n      global.character.cursor_stack.set_stack{name = \"transport-belt\", count = 24}\n\n      local player_position = global.player.position\n      target_cursor_position = {player_position.x - 3.5, player_position.y - 1}\n\n      script.on_nth_tick(1, function()\n\n        local finished = game.move_cursor({position = target_cursor_position})\n\n        if global.player.can_build_from_cursor{position = game.camera_player_cursor_position} then\n          global.player.build_from_cursor{position = game.camera_player_cursor_position, direction = defines.direction.west}\n        end\n\n        update_camera()\n\n        if finished then\n          step_5()\n        end\n\n      end)\n    end\n\n    step_5 = function()\n      global.character.walking_state = {walking = true, direction = defines.direction.west}\n\n      offset = {-3.5, -1}\n      script.on_nth_tick(1, function()\n\n        game.camera_player_cursor_position = {global.character.position.x + offset[1], global.character.position.y + offset[2]}\n\n        if global.player.can_build_from_cursor{position = game.camera_player_cursor_position} then\n          global.player.build_from_cursor{position = game.camera_player_cursor_position, direction = defines.direction.west}\n        end\n\n        update_camera()\n\n        if global.player.cursor_stack.count == 0 then\n          finish()\n        end\n\n      end)\n    end\n\n    finish = function()\n      update_camera()\n      global.character.walking_state = {walking = false}\n      global.character.direction = defines.direction.south\n      script.on_nth_tick(1, nil)\n    end\n\n    step_0()\n  "
  },
  skip_trigger = {
    build_by_dragging = true,
    build_in_line = true,
    consecutive = true,
    count = 5,
    type = "build-entity"
  },
  trigger = {
    build_by_dragging = false,
    build_in_line = true,
    consecutive = true,
    count = 4,
    type = "build-entity"
  },
  type = "tips-and-tricks-item"
}